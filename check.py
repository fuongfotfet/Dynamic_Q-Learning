import re, json

# Dán toàn bộ block 'Obstacle(...)' vào đây:
raw_text = """
Obstacle(38.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 38.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 54.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 70.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 86.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(486.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(502.0, 102.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(486.0, 118.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(278.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(486.0, 134.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(278.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 150.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 166.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 182.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 198.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 214.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 214.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 214.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 214.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 214.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 230.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 246.0, 16, 16, True, [0, 0]),
Obstacle(470.0, 246.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 262.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 262.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 262.0, 16, 16, True, [0, 0]),
Obstacle(470.0, 262.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 310.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(86.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(102.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(118.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 326.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 342.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 358.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 374.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 390.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 406.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 422.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(310.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(390.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 438.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(438.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(454.0, 454.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(278.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(406.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(422.0, 470.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(278.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(326.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(342.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(358.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(374.0, 486.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(278.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(294.0, 502.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(230.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(246.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(262.0, 518.0, 16, 16, True, [0, 0]),
Obstacle(38.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(54.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(70.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(134.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(150.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(166.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(182.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(198.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(214.0, 534.0, 16, 16, True, [0, 0]),
Obstacle(133.5, 247.0, 31, 30, False, [0.5, 0], x_bound=[0, 100], y_bound=[0, 0]),
Obstacle(506.5, 228.0, 21, 24, False, [0, 0.5], x_bound=[0, 0], y_bound=[0, 100]),
Obstacle(464.5, 402.0, 13, 12, False, [0.3, 0], x_bound=[0, 50], y_bound=[0, 0]),
"""

# Regex để parse
pattern = re.compile(
    r"Obstacle\(([-\d\.]+), ([-\d\.]+), (\d+), (\d+), (True|False), (\[[^\]]+\])"
    r"(?:, x_bound=\[([^\]]*)\], y_bound=\[([^\]]*)\])?\)"
)

def parse_obstacle(match):
    x = float(match.group(1))
    y = float(match.group(2))
    w = int(match.group(3))
    h = int(match.group(4))
    stat = match.group(5) == "True"
    angle_list = eval(match.group(6))
    angle = angle_list[0] if isinstance(angle_list, list) else angle_list
    obs = {
        "x": x,
        "y": y,
        "width": w,
        "height": h,
        "static": stat,
        "angle": angle
    }
    if match.group(7):  # x_bound
        obs["x_bound"] = [float(v) for v in match.group(7).split(",") if v.strip()]
    if match.group(8):  # y_bound
        obs["y_bound"] = [float(v) for v in match.group(8).split(",") if v.strip()]
    return obs

obstacles = [parse_obstacle(m) for m in pattern.finditer(raw_text)]

map_data = {
    "mapX": {
        "Start": [214, 70],
        "Goal": [390, 518],
        "Obstacles": obstacles
    }
}

with open("mapX.json", "w") as f:
    json.dump(map_data, f, indent=4)

print("Done! File đã lưu thành mapX.json")